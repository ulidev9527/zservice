// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: zauth.proto

package zauth_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Default_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Default_REQ) Reset() {
	*x = Default_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_REQ) ProtoMessage() {}

func (x *Default_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_REQ.ProtoReflect.Descriptor instead.
func (*Default_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{0}
}

type Default_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
}

func (x *Default_RES) Reset() {
	*x = Default_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RES) ProtoMessage() {}

func (x *Default_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RES.ProtoReflect.Descriptor instead.
func (*Default_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{1}
}

func (x *Default_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

// 账户/登陆相关
type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`            // 用户ID
	LoginName string `protobuf:"bytes,2,opt,name=loginName,proto3" json:"loginName,omitempty"` // 登录名
	Phone     string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`         // 手机号
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{2}
}

func (x *UserInfo) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserInfo) GetLoginName() string {
	if x != nil {
		return x.LoginName
	}
	return ""
}

func (x *UserInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type LoginByPhone_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone        string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`                // 手机号 +86****
	VerifyCode   string `protobuf:"bytes,2,opt,name=verifyCode,proto3" json:"verifyCode,omitempty"`      // 验证码
	Service      string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`            // 登陆服务
	Toekn        string `protobuf:"bytes,4,opt,name=toekn,proto3" json:"toekn,omitempty"`                // 令牌
	ToeknSign    string `protobuf:"bytes,5,opt,name=toeknSign,proto3" json:"toeknSign,omitempty"`        // 令牌 sign
	IsAutoCreate bool   `protobuf:"varint,6,opt,name=isAutoCreate,proto3" json:"isAutoCreate,omitempty"` // 是否自动创建账号
}

func (x *LoginByPhone_REQ) Reset() {
	*x = LoginByPhone_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginByPhone_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByPhone_REQ) ProtoMessage() {}

func (x *LoginByPhone_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByPhone_REQ.ProtoReflect.Descriptor instead.
func (*LoginByPhone_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{3}
}

func (x *LoginByPhone_REQ) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *LoginByPhone_REQ) GetVerifyCode() string {
	if x != nil {
		return x.VerifyCode
	}
	return ""
}

func (x *LoginByPhone_REQ) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *LoginByPhone_REQ) GetToekn() string {
	if x != nil {
		return x.Toekn
	}
	return ""
}

func (x *LoginByPhone_REQ) GetToeknSign() string {
	if x != nil {
		return x.ToeknSign
	}
	return ""
}

func (x *LoginByPhone_REQ) GetIsAutoCreate() bool {
	if x != nil {
		return x.IsAutoCreate
	}
	return false
}

type LoginByName_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User         string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`                  // 账号
	Password     string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`          // 密码
	Service      string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`            // 登陆服务
	Toekn        string `protobuf:"bytes,4,opt,name=toekn,proto3" json:"toekn,omitempty"`                // 令牌
	ToeknSign    string `protobuf:"bytes,5,opt,name=toeknSign,proto3" json:"toeknSign,omitempty"`        // 令牌 sign
	IsAutoCreate bool   `protobuf:"varint,6,opt,name=isAutoCreate,proto3" json:"isAutoCreate,omitempty"` // 是否自动创建账号
}

func (x *LoginByName_REQ) Reset() {
	*x = LoginByName_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginByName_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByName_REQ) ProtoMessage() {}

func (x *LoginByName_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByName_REQ.ProtoReflect.Descriptor instead.
func (*LoginByName_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{4}
}

func (x *LoginByName_REQ) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *LoginByName_REQ) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginByName_REQ) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *LoginByName_REQ) GetToekn() string {
	if x != nil {
		return x.Toekn
	}
	return ""
}

func (x *LoginByName_REQ) GetToeknSign() string {
	if x != nil {
		return x.ToeknSign
	}
	return ""
}

func (x *LoginByName_REQ) GetIsAutoCreate() bool {
	if x != nil {
		return x.IsAutoCreate
	}
	return false
}

type LoginByToken_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service   string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`     // 登陆服务
	Toekn     string `protobuf:"bytes,2,opt,name=toekn,proto3" json:"toekn,omitempty"`         // 令牌
	ToeknSign string `protobuf:"bytes,3,opt,name=toeknSign,proto3" json:"toeknSign,omitempty"` // 令牌 sign
}

func (x *LoginByToken_REQ) Reset() {
	*x = LoginByToken_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginByToken_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByToken_REQ) ProtoMessage() {}

func (x *LoginByToken_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByToken_REQ.ProtoReflect.Descriptor instead.
func (*LoginByToken_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{5}
}

func (x *LoginByToken_REQ) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *LoginByToken_REQ) GetToekn() string {
	if x != nil {
		return x.Toekn
	}
	return ""
}

func (x *LoginByToken_REQ) GetToeknSign() string {
	if x != nil {
		return x.ToeknSign
	}
	return ""
}

type Login_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     uint32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`        // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	UserInfo *UserInfo `protobuf:"bytes,2,opt,name=userInfo,proto3" json:"userInfo,omitempty"` // 用户信息
}

func (x *Login_RES) Reset() {
	*x = Login_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Login_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Login_RES) ProtoMessage() {}

func (x *Login_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Login_RES.ProtoReflect.Descriptor instead.
func (*Login_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{6}
}

func (x *Login_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Login_RES) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type LoginCheck_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`         // 令牌
	TokenSign string `protobuf:"bytes,2,opt,name=tokenSign,proto3" json:"tokenSign,omitempty"` // 签名
	Service   string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`     // 登陆服务
}

func (x *LoginCheck_REQ) Reset() {
	*x = LoginCheck_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginCheck_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginCheck_REQ) ProtoMessage() {}

func (x *LoginCheck_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginCheck_REQ.ProtoReflect.Descriptor instead.
func (*LoginCheck_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{7}
}

func (x *LoginCheck_REQ) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginCheck_REQ) GetTokenSign() string {
	if x != nil {
		return x.TokenSign
	}
	return ""
}

func (x *LoginCheck_REQ) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type LoginCheck_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     uint32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`        // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	UserInfo *UserInfo `protobuf:"bytes,2,opt,name=userInfo,proto3" json:"userInfo,omitempty"` // 用户信息, 登录后会返回
}

func (x *LoginCheck_RES) Reset() {
	*x = LoginCheck_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginCheck_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginCheck_RES) ProtoMessage() {}

func (x *LoginCheck_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginCheck_RES.ProtoReflect.Descriptor instead.
func (*LoginCheck_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{8}
}

func (x *LoginCheck_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LoginCheck_RES) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type Logout_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	TokenSign string `protobuf:"bytes,2,opt,name=tokenSign,proto3" json:"tokenSign,omitempty"`
}

func (x *Logout_REQ) Reset() {
	*x = Logout_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Logout_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logout_REQ) ProtoMessage() {}

func (x *Logout_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logout_REQ.ProtoReflect.Descriptor instead.
func (*Logout_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{9}
}

func (x *Logout_REQ) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Logout_REQ) GetTokenSign() string {
	if x != nil {
		return x.TokenSign
	}
	return ""
}

type CheckAuth_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service   string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`     // 服务
	Action    string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`       // 动作
	Path      string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`           // 路径
	Token     string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`         // 令牌
	TokenSign string `protobuf:"bytes,5,opt,name=tokenSign,proto3" json:"tokenSign,omitempty"` // 令牌签名
}

func (x *CheckAuth_REQ) Reset() {
	*x = CheckAuth_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAuth_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAuth_REQ) ProtoMessage() {}

func (x *CheckAuth_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAuth_REQ.ProtoReflect.Descriptor instead.
func (*CheckAuth_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{10}
}

func (x *CheckAuth_REQ) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *CheckAuth_REQ) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *CheckAuth_REQ) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CheckAuth_REQ) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CheckAuth_REQ) GetTokenSign() string {
	if x != nil {
		return x.TokenSign
	}
	return ""
}

type CheckAuth_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`  // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"` // 令牌，返回时需要进行匹配，如果不匹配代表有更新
	Uid   uint32 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`    // 用户ID, 登陆成功后会返回uid
}

func (x *CheckAuth_RES) Reset() {
	*x = CheckAuth_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAuth_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAuth_RES) ProtoMessage() {}

func (x *CheckAuth_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAuth_RES.ProtoReflect.Descriptor instead.
func (*CheckAuth_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{11}
}

func (x *CheckAuth_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckAuth_RES) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CheckAuth_RES) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type HasUID_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"` // 账号ID
}

func (x *HasUID_REQ) Reset() {
	*x = HasUID_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasUID_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasUID_REQ) ProtoMessage() {}

func (x *HasUID_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasUID_REQ.ProtoReflect.Descriptor instead.
func (*HasUID_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{12}
}

func (x *HasUID_REQ) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

// 权限相关
type PermissionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermissionID uint32 `protobuf:"varint,1,opt,name=permissionID,proto3" json:"permissionID,omitempty"` // 权限ID
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                  // 权限名称
	Service      string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`            // 权限所属服务
	Action       string `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`              // 动作名称
	Path         string `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`                  // 权限路径
	State        uint32 `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"`               // 权限状态 0拒绝所有访问 1公开访问 2授权访问 3继承父级
}

func (x *PermissionInfo) Reset() {
	*x = PermissionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionInfo) ProtoMessage() {}

func (x *PermissionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionInfo.ProtoReflect.Descriptor instead.
func (*PermissionInfo) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{13}
}

func (x *PermissionInfo) GetPermissionID() uint32 {
	if x != nil {
		return x.PermissionID
	}
	return 0
}

func (x *PermissionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PermissionInfo) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *PermissionInfo) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *PermissionInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PermissionInfo) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

type PermissionBindInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetType   uint32 `protobuf:"varint,1,opt,name=targetType,proto3" json:"targetType,omitempty"`     // 权限类型 1组织 2账号
	TargetID     uint32 `protobuf:"varint,2,opt,name=targetID,proto3" json:"targetID,omitempty"`         // 权限对象ID
	Expires      int64  `protobuf:"varint,3,opt,name=expires,proto3" json:"expires,omitempty"`           // 过期时间戳
	PermissionID uint32 `protobuf:"varint,4,opt,name=permissionID,proto3" json:"permissionID,omitempty"` // 权限ID
	State        uint32 `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`               // 是否允许访问 0禁止 1允许
}

func (x *PermissionBindInfo) Reset() {
	*x = PermissionBindInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionBindInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionBindInfo) ProtoMessage() {}

func (x *PermissionBindInfo) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionBindInfo.ProtoReflect.Descriptor instead.
func (*PermissionBindInfo) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{14}
}

func (x *PermissionBindInfo) GetTargetType() uint32 {
	if x != nil {
		return x.TargetType
	}
	return 0
}

func (x *PermissionBindInfo) GetTargetID() uint32 {
	if x != nil {
		return x.TargetID
	}
	return 0
}

func (x *PermissionBindInfo) GetExpires() int64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

func (x *PermissionBindInfo) GetPermissionID() uint32 {
	if x != nil {
		return x.PermissionID
	}
	return 0
}

func (x *PermissionBindInfo) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

type PermissionInfo_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	Info *PermissionInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`  // 权限
}

func (x *PermissionInfo_RES) Reset() {
	*x = PermissionInfo_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionInfo_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionInfo_RES) ProtoMessage() {}

func (x *PermissionInfo_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionInfo_RES.ProtoReflect.Descriptor instead.
func (*PermissionInfo_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{15}
}

func (x *PermissionInfo_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PermissionInfo_RES) GetInfo() *PermissionInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type PermissionInfoList_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	List []*PermissionInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`  // 权限列表
}

func (x *PermissionInfoList_RES) Reset() {
	*x = PermissionInfoList_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionInfoList_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionInfoList_RES) ProtoMessage() {}

func (x *PermissionInfoList_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionInfoList_RES.ProtoReflect.Descriptor instead.
func (*PermissionInfoList_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{16}
}

func (x *PermissionInfoList_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PermissionInfoList_RES) GetList() []*PermissionInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type PermissionListGet_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`    // 第几页
	Size   uint32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`    // 每页多少条
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"` // 搜索关键字
}

func (x *PermissionListGet_REQ) Reset() {
	*x = PermissionListGet_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionListGet_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionListGet_REQ) ProtoMessage() {}

func (x *PermissionListGet_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionListGet_REQ.ProtoReflect.Descriptor instead.
func (*PermissionListGet_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{17}
}

func (x *PermissionListGet_REQ) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PermissionListGet_REQ) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PermissionListGet_REQ) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type PermissionBind_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermissionID uint32 `protobuf:"varint,1,opt,name=permissionID,proto3" json:"permissionID,omitempty"` // 权限ID
	TargetType   uint32 `protobuf:"varint,2,opt,name=targetType,proto3" json:"targetType,omitempty"`     // 权限类型 1组织 2账号
	TargetID     uint32 `protobuf:"varint,3,opt,name=targetID,proto3" json:"targetID,omitempty"`         // 权限对象ID
	Expires      int64  `protobuf:"varint,4,opt,name=expires,proto3" json:"expires,omitempty"`           // 过期时间戳
	State        uint32 `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`               // 是否允许访问 0禁止 1允许
}

func (x *PermissionBind_REQ) Reset() {
	*x = PermissionBind_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionBind_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionBind_REQ) ProtoMessage() {}

func (x *PermissionBind_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionBind_REQ.ProtoReflect.Descriptor instead.
func (*PermissionBind_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{18}
}

func (x *PermissionBind_REQ) GetPermissionID() uint32 {
	if x != nil {
		return x.PermissionID
	}
	return 0
}

func (x *PermissionBind_REQ) GetTargetType() uint32 {
	if x != nil {
		return x.TargetType
	}
	return 0
}

func (x *PermissionBind_REQ) GetTargetID() uint32 {
	if x != nil {
		return x.TargetID
	}
	return 0
}

func (x *PermissionBind_REQ) GetExpires() int64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

func (x *PermissionBind_REQ) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

type PermissionBind_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	Info *PermissionBindInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`  // 权限绑定信息
}

func (x *PermissionBind_RES) Reset() {
	*x = PermissionBind_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionBind_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionBind_RES) ProtoMessage() {}

func (x *PermissionBind_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionBind_RES.ProtoReflect.Descriptor instead.
func (*PermissionBind_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{19}
}

func (x *PermissionBind_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PermissionBind_RES) GetInfo() *PermissionBindInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 组织相关
type OrgInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgID    uint32 `protobuf:"varint,1,opt,name=OrgID,proto3" json:"OrgID,omitempty"`       // 组织ID
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`          // 组织名称
	RootID   uint32 `protobuf:"varint,3,opt,name=rootID,proto3" json:"rootID,omitempty"`     // 根组织ID
	ParentID uint32 `protobuf:"varint,4,opt,name=parentID,proto3" json:"parentID,omitempty"` // 父组织ID
	State    uint32 `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`       // 组织状态 0禁用 1公开访问 2授权访问 3继承父级 4禁止访问
}

func (x *OrgInfo) Reset() {
	*x = OrgInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgInfo) ProtoMessage() {}

func (x *OrgInfo) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgInfo.ProtoReflect.Descriptor instead.
func (*OrgInfo) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{20}
}

func (x *OrgInfo) GetOrgID() uint32 {
	if x != nil {
		return x.OrgID
	}
	return 0
}

func (x *OrgInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrgInfo) GetRootID() uint32 {
	if x != nil {
		return x.RootID
	}
	return 0
}

func (x *OrgInfo) GetParentID() uint32 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *OrgInfo) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

type OrgInfo_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	Info *OrgInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`  // 组织
}

func (x *OrgInfo_RES) Reset() {
	*x = OrgInfo_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgInfo_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgInfo_RES) ProtoMessage() {}

func (x *OrgInfo_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgInfo_RES.ProtoReflect.Descriptor instead.
func (*OrgInfo_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{21}
}

func (x *OrgInfo_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OrgInfo_RES) GetInfo() *OrgInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type OrgInfoList_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	List []*OrgInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`  // 组织列表
}

func (x *OrgInfoList_RES) Reset() {
	*x = OrgInfoList_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgInfoList_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgInfoList_RES) ProtoMessage() {}

func (x *OrgInfoList_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgInfoList_RES.ProtoReflect.Descriptor instead.
func (*OrgInfoList_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{22}
}

func (x *OrgInfoList_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OrgInfoList_RES) GetList() []*OrgInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type GetOrgList_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`    // 第几页
	Size   uint32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`    // 每页多少条
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"` // 搜索关键字
}

func (x *GetOrgList_REQ) Reset() {
	*x = GetOrgList_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgList_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgList_REQ) ProtoMessage() {}

func (x *GetOrgList_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgList_REQ.ProtoReflect.Descriptor instead.
func (*GetOrgList_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{23}
}

func (x *GetOrgList_REQ) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetOrgList_REQ) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetOrgList_REQ) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type GetOrgInfo_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgID   uint32 `protobuf:"varint,1,opt,name=OrgID,proto3" json:"OrgID,omitempty"`    // 组织ID
	Service string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"` // 服务
	OrgName string `protobuf:"bytes,3,opt,name=orgName,proto3" json:"orgName,omitempty"` // 组织名称
}

func (x *GetOrgInfo_REQ) Reset() {
	*x = GetOrgInfo_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgInfo_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgInfo_REQ) ProtoMessage() {}

func (x *GetOrgInfo_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgInfo_REQ.ProtoReflect.Descriptor instead.
func (*GetOrgInfo_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{24}
}

func (x *GetOrgInfo_REQ) GetOrgID() uint32 {
	if x != nil {
		return x.OrgID
	}
	return 0
}

func (x *GetOrgInfo_REQ) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *GetOrgInfo_REQ) GetOrgName() string {
	if x != nil {
		return x.OrgName
	}
	return ""
}

// 用户相关
type UserBan_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     uint32   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`        // 用户ID
	Service []string `protobuf:"bytes,2,rep,name=service,proto3" json:"service,omitempty"` // ban 服务，不填写直接禁用所有服务，无论是否填写都会退出目前所有服务的登录
	Expire  int64    `protobuf:"varint,3,opt,name=expire,proto3" json:"expire,omitempty"`  // 过期时间，超过时间自动解封
	Msg     string   `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`         // 封禁原因
}

func (x *UserBan_REQ) Reset() {
	*x = UserBan_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBan_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBan_REQ) ProtoMessage() {}

func (x *UserBan_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBan_REQ.ProtoReflect.Descriptor instead.
func (*UserBan_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{25}
}

func (x *UserBan_REQ) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserBan_REQ) GetService() []string {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *UserBan_REQ) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *UserBan_REQ) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UserOrgBind_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`         // uid
	OrgID   uint32 `protobuf:"varint,2,opt,name=orgID,proto3" json:"orgID,omitempty"`     // orgid
	Expires int64  `protobuf:"varint,3,opt,name=expires,proto3" json:"expires,omitempty"` // 过期时间戳
	State   uint32 `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`     // 状态 0禁用 1开启
}

func (x *UserOrgBind_REQ) Reset() {
	*x = UserOrgBind_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOrgBind_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOrgBind_REQ) ProtoMessage() {}

func (x *UserOrgBind_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOrgBind_REQ.ProtoReflect.Descriptor instead.
func (*UserOrgBind_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{26}
}

func (x *UserOrgBind_REQ) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserOrgBind_REQ) GetOrgID() uint32 {
	if x != nil {
		return x.OrgID
	}
	return 0
}

func (x *UserOrgBind_REQ) GetExpires() int64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

func (x *UserOrgBind_REQ) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

type GetOrgUsers_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgID uint32 `protobuf:"varint,1,opt,name=OrgID,proto3" json:"OrgID,omitempty"` // 组织ID
	Page  uint32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`   // 第几页
}

func (x *GetOrgUsers_REQ) Reset() {
	*x = GetOrgUsers_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgUsers_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgUsers_REQ) ProtoMessage() {}

func (x *GetOrgUsers_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgUsers_REQ.ProtoReflect.Descriptor instead.
func (*GetOrgUsers_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{27}
}

func (x *GetOrgUsers_REQ) GetOrgID() uint32 {
	if x != nil {
		return x.OrgID
	}
	return 0
}

func (x *GetOrgUsers_REQ) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetOrgUsers_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	List []*UserInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`  // 组织列表
}

func (x *GetOrgUsers_RES) Reset() {
	*x = GetOrgUsers_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgUsers_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgUsers_RES) ProtoMessage() {}

func (x *GetOrgUsers_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgUsers_RES.ProtoReflect.Descriptor instead.
func (*GetOrgUsers_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{28}
}

func (x *GetOrgUsers_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetOrgUsers_RES) GetList() []*UserInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 短信相关
type SMSVerifyCodeSend_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone      string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`           // 手机号 必须带有 +86
	VerifyCode string `protobuf:"bytes,2,opt,name=verifyCode,proto3" json:"verifyCode,omitempty"` // 接口验证码，如果需要就上传
}

func (x *SMSVerifyCodeSend_REQ) Reset() {
	*x = SMSVerifyCodeSend_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMSVerifyCodeSend_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMSVerifyCodeSend_REQ) ProtoMessage() {}

func (x *SMSVerifyCodeSend_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMSVerifyCodeSend_REQ.ProtoReflect.Descriptor instead.
func (*SMSVerifyCodeSend_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{29}
}

func (x *SMSVerifyCodeSend_REQ) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SMSVerifyCodeSend_REQ) GetVerifyCode() string {
	if x != nil {
		return x.VerifyCode
	}
	return ""
}

type SMSSendVerifyCode_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`            // 状态
	VerifyCode string `protobuf:"bytes,2,opt,name=verifyCode,proto3" json:"verifyCode,omitempty"` // 验证码, 返回 6 位字符串，前 4 位会标星
}

func (x *SMSSendVerifyCode_RES) Reset() {
	*x = SMSSendVerifyCode_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMSSendVerifyCode_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMSSendVerifyCode_RES) ProtoMessage() {}

func (x *SMSSendVerifyCode_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMSSendVerifyCode_RES.ProtoReflect.Descriptor instead.
func (*SMSSendVerifyCode_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{30}
}

func (x *SMSSendVerifyCode_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SMSSendVerifyCode_RES) GetVerifyCode() string {
	if x != nil {
		return x.VerifyCode
	}
	return ""
}

type SMSVerifyCodeVerify_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone      string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`           // 手机号 必须带有 +86
	VerifyCode string `protobuf:"bytes,2,opt,name=verifyCode,proto3" json:"verifyCode,omitempty"` // 验证码
}

func (x *SMSVerifyCodeVerify_REQ) Reset() {
	*x = SMSVerifyCodeVerify_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMSVerifyCodeVerify_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMSVerifyCodeVerify_REQ) ProtoMessage() {}

func (x *SMSVerifyCodeVerify_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMSVerifyCodeVerify_REQ.ProtoReflect.Descriptor instead.
func (*SMSVerifyCodeVerify_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{31}
}

func (x *SMSVerifyCodeVerify_REQ) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SMSVerifyCodeVerify_REQ) GetVerifyCode() string {
	if x != nil {
		return x.VerifyCode
	}
	return ""
}

// 其它
type HasZZZZString_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str string `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"` // 字符串
}

func (x *HasZZZZString_REQ) Reset() {
	*x = HasZZZZString_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasZZZZString_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasZZZZString_REQ) ProtoMessage() {}

func (x *HasZZZZString_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasZZZZString_REQ.ProtoReflect.Descriptor instead.
func (*HasZZZZString_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{32}
}

func (x *HasZZZZString_REQ) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

// 键值对数据存储
type SetServiceKV_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value   string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Service string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *SetServiceKV_REQ) Reset() {
	*x = SetServiceKV_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetServiceKV_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetServiceKV_REQ) ProtoMessage() {}

func (x *SetServiceKV_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetServiceKV_REQ.ProtoReflect.Descriptor instead.
func (*SetServiceKV_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{33}
}

func (x *SetServiceKV_REQ) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetServiceKV_REQ) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SetServiceKV_REQ) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type GetServiceKV_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Service string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *GetServiceKV_REQ) Reset() {
	*x = GetServiceKV_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceKV_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceKV_REQ) ProtoMessage() {}

func (x *GetServiceKV_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceKV_REQ.ProtoReflect.Descriptor instead.
func (*GetServiceKV_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{34}
}

func (x *GetServiceKV_REQ) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetServiceKV_REQ) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type GetServiceKV_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	Key   string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetServiceKV_RES) Reset() {
	*x = GetServiceKV_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceKV_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceKV_RES) ProtoMessage() {}

func (x *GetServiceKV_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceKV_RES.ProtoReflect.Descriptor instead.
func (*GetServiceKV_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{35}
}

func (x *GetServiceKV_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetServiceKV_RES) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetServiceKV_RES) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// 服务注册
// 权限信息
type ServiceRegist_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service         string            `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`                 // 服务名
	InitPermissions []*PermissionInfo `protobuf:"bytes,2,rep,name=initPermissions,proto3" json:"initPermissions,omitempty"` // 初始化的权限列表，数据库没有的进行创建，有的则忽略，此处数据只会使用 action/path/static 三个字段
}

func (x *ServiceRegist_REQ) Reset() {
	*x = ServiceRegist_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceRegist_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceRegist_REQ) ProtoMessage() {}

func (x *ServiceRegist_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceRegist_REQ.ProtoReflect.Descriptor instead.
func (*ServiceRegist_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{36}
}

func (x *ServiceRegist_REQ) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ServiceRegist_REQ) GetInitPermissions() []*PermissionInfo {
	if x != nil {
		return x.InitPermissions
	}
	return nil
}

type ServiceRegist_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           uint32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                    // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	OrgInfo        *OrgInfo        `protobuf:"bytes,2,opt,name=OrgInfo,proto3" json:"OrgInfo,omitempty"`               // 组织信息
	PermissionInfo *PermissionInfo `protobuf:"bytes,3,opt,name=permissionInfo,proto3" json:"permissionInfo,omitempty"` // 权限信息
}

func (x *ServiceRegist_RES) Reset() {
	*x = ServiceRegist_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceRegist_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceRegist_RES) ProtoMessage() {}

func (x *ServiceRegist_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceRegist_RES.ProtoReflect.Descriptor instead.
func (*ServiceRegist_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{37}
}

func (x *ServiceRegist_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ServiceRegist_RES) GetOrgInfo() *OrgInfo {
	if x != nil {
		return x.OrgInfo
	}
	return nil
}

func (x *ServiceRegist_RES) GetPermissionInfo() *PermissionInfo {
	if x != nil {
		return x.PermissionInfo
	}
	return nil
}

// 资源
type AssetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`        // 文件名
	Size    uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`       // 文件大小
	Md5     string `protobuf:"bytes,3,opt,name=md5,proto3" json:"md5,omitempty"`          // 文件md5
	Expires int64  `protobuf:"varint,4,opt,name=expires,proto3" json:"expires,omitempty"` // 过期时间戳
	AssetID string `protobuf:"bytes,5,opt,name=assetID,proto3" json:"assetID,omitempty"`  // 资源唯一标识
	Data    []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`        // 文件数据
}

func (x *AssetInfo) Reset() {
	*x = AssetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetInfo) ProtoMessage() {}

func (x *AssetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetInfo.ProtoReflect.Descriptor instead.
func (*AssetInfo) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{38}
}

func (x *AssetInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AssetInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AssetInfo) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *AssetInfo) GetExpires() int64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

func (x *AssetInfo) GetAssetID() string {
	if x != nil {
		return x.AssetID
	}
	return ""
}

func (x *AssetInfo) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AssetInfo_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	Info *AssetInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`  // 资源信息
}

func (x *AssetInfo_RES) Reset() {
	*x = AssetInfo_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetInfo_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetInfo_RES) ProtoMessage() {}

func (x *AssetInfo_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetInfo_RES.ProtoReflect.Descriptor instead.
func (*AssetInfo_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{39}
}

func (x *AssetInfo_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AssetInfo_RES) GetInfo() *AssetInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type ConfigAssetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                   // 文件名
	Service       string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`             // 服务名
	Parser        uint32 `protobuf:"varint,3,opt,name=parser,proto3" json:"parser,omitempty"`              // 解析器
	AssetID       string `protobuf:"bytes,4,opt,name=assetID,proto3" json:"assetID,omitempty"`             // 解析前资源唯一标识
	ParserAssetID string `protobuf:"bytes,5,opt,name=parserAssetID,proto3" json:"parserAssetID,omitempty"` // 解析后资源唯一标识
}

func (x *ConfigAssetInfo) Reset() {
	*x = ConfigAssetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigAssetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigAssetInfo) ProtoMessage() {}

func (x *ConfigAssetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigAssetInfo.ProtoReflect.Descriptor instead.
func (*ConfigAssetInfo) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{40}
}

func (x *ConfigAssetInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigAssetInfo) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ConfigAssetInfo) GetParser() uint32 {
	if x != nil {
		return x.Parser
	}
	return 0
}

func (x *ConfigAssetInfo) GetAssetID() string {
	if x != nil {
		return x.AssetID
	}
	return ""
}

func (x *ConfigAssetInfo) GetParserAssetID() string {
	if x != nil {
		return x.ParserAssetID
	}
	return ""
}

type UploadAsset_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`        // 文件全名, 文件全名 包括后缀 不包含路径
	Expires int64  `protobuf:"varint,2,opt,name=expires,proto3" json:"expires,omitempty"` // 过期时间戳
	Data    []byte `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`        // 文件数据
}

func (x *UploadAsset_REQ) Reset() {
	*x = UploadAsset_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadAsset_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAsset_REQ) ProtoMessage() {}

func (x *UploadAsset_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAsset_REQ.ProtoReflect.Descriptor instead.
func (*UploadAsset_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{41}
}

func (x *UploadAsset_REQ) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UploadAsset_REQ) GetExpires() int64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

func (x *UploadAsset_REQ) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DownloadAsset_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetID string `protobuf:"bytes,1,opt,name=assetID,proto3" json:"assetID,omitempty"` // 资源token
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`       // 文件全名, 文件全名 包括后缀 不包含路径
	Service string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"` // 服务名
}

func (x *DownloadAsset_REQ) Reset() {
	*x = DownloadAsset_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadAsset_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadAsset_REQ) ProtoMessage() {}

func (x *DownloadAsset_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadAsset_REQ.ProtoReflect.Descriptor instead.
func (*DownloadAsset_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{42}
}

func (x *DownloadAsset_REQ) GetAssetID() string {
	if x != nil {
		return x.AssetID
	}
	return ""
}

func (x *DownloadAsset_REQ) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DownloadAsset_REQ) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type UploadConfigAsset_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`       // 文件名
	Service string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"` // 服务名
	Parser  uint32 `protobuf:"varint,3,opt,name=parser,proto3" json:"parser,omitempty"`  // 解析器
	Data    []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`       // 文件数据
}

func (x *UploadConfigAsset_REQ) Reset() {
	*x = UploadConfigAsset_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadConfigAsset_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadConfigAsset_REQ) ProtoMessage() {}

func (x *UploadConfigAsset_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadConfigAsset_REQ.ProtoReflect.Descriptor instead.
func (*UploadConfigAsset_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{43}
}

func (x *UploadConfigAsset_REQ) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UploadConfigAsset_REQ) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *UploadConfigAsset_REQ) GetParser() uint32 {
	if x != nil {
		return x.Parser
	}
	return 0
}

func (x *UploadConfigAsset_REQ) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadConfigAsset_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code            uint32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                      // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	AssetInfo       *AssetInfo       `protobuf:"bytes,2,opt,name=assetInfo,proto3" json:"assetInfo,omitempty"`             // 资源信息
	ParserAssetInfo *AssetInfo       `protobuf:"bytes,3,opt,name=parserAssetInfo,proto3" json:"parserAssetInfo,omitempty"` // 解析后资源信息
	ConfigInfo      *ConfigAssetInfo `protobuf:"bytes,4,opt,name=configInfo,proto3" json:"configInfo,omitempty"`           // 配置信息
}

func (x *UploadConfigAsset_RES) Reset() {
	*x = UploadConfigAsset_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadConfigAsset_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadConfigAsset_RES) ProtoMessage() {}

func (x *UploadConfigAsset_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadConfigAsset_RES.ProtoReflect.Descriptor instead.
func (*UploadConfigAsset_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{44}
}

func (x *UploadConfigAsset_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UploadConfigAsset_RES) GetAssetInfo() *AssetInfo {
	if x != nil {
		return x.AssetInfo
	}
	return nil
}

func (x *UploadConfigAsset_RES) GetParserAssetInfo() *AssetInfo {
	if x != nil {
		return x.ParserAssetInfo
	}
	return nil
}

func (x *UploadConfigAsset_RES) GetConfigInfo() *ConfigAssetInfo {
	if x != nil {
		return x.ConfigInfo
	}
	return nil
}

type DownloadConfigAsset_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`       // 文件名
	Service string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"` // 服务名
}

func (x *DownloadConfigAsset_REQ) Reset() {
	*x = DownloadConfigAsset_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadConfigAsset_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadConfigAsset_REQ) ProtoMessage() {}

func (x *DownloadConfigAsset_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadConfigAsset_REQ.ProtoReflect.Descriptor instead.
func (*DownloadConfigAsset_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{45}
}

func (x *DownloadConfigAsset_REQ) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DownloadConfigAsset_REQ) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

var File_zauth_proto protoreflect.FileDescriptor

var file_zauth_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x7a,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x22, 0x0d, 0x0a, 0x0b, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x52, 0x45, 0x51, 0x22, 0x21, 0x0a, 0x0b, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x50, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x10,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x52, 0x45, 0x51,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x65, 0x6b, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x65, 0x6b, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x65, 0x6b, 0x6e, 0x53,
	0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x65, 0x6b, 0x6e,
	0x53, 0x69, 0x67, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x41, 0x75,
	0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x0f, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x65, 0x6b, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x65, 0x6b, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x6f, 0x65, 0x6b, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x6f, 0x65, 0x6b, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73,
	0x41, 0x75, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x22, 0x60,
	0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x52,
	0x45, 0x51, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x65, 0x6b, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x65,
	0x6b, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x65, 0x6b, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x65, 0x6b, 0x6e, 0x53, 0x69, 0x67, 0x6e,
	0x22, 0x4f, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x2e, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x5e, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f,
	0x52, 0x45, 0x51, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x22, 0x54, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f,
	0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x7a, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x40, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x22, 0x89, 0x01, 0x0a, 0x0d, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x53, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x53, 0x69, 0x67, 0x6e, 0x22, 0x4b, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75,
	0x74, 0x68, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0x1e, 0x0a, 0x0a, 0x48, 0x61, 0x73, 0x55, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x51,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x0e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x12, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x56, 0x0a, 0x12, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x5a, 0x0a, 0x16, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52,
	0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x15, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x65, 0x74, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0xa4, 0x01,
	0x0a, 0x12, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64,
	0x5f, 0x52, 0x45, 0x51, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x5a, 0x0a, 0x12, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x30,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0x7d, 0x0a, 0x07, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x4f,
	0x72, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4f, 0x72, 0x67, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x48, 0x0a, 0x0b, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x4c, 0x0a, 0x0f, 0x4f, 0x72, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x5a, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x14, 0x0a, 0x05, 0x4f,
	0x72, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4f, 0x72, 0x67, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x72, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e,
	0x5f, 0x52, 0x45, 0x51, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x69, 0x0a, 0x0f, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x72, 0x67, 0x42, 0x69, 0x6e, 0x64, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x3b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x72, 0x67, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x22, 0x4d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x4d, 0x0a, 0x15, 0x53, 0x4d, 0x53, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x4b, 0x0a, 0x15, 0x53, 0x4d, 0x53, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4f, 0x0a,
	0x17, 0x53, 0x4d, 0x53, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x25,
	0x0a, 0x11, 0x48, 0x61, 0x73, 0x5a, 0x5a, 0x5a, 0x5a, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x52, 0x45, 0x51, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x74, 0x72, 0x22, 0x54, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4b, 0x56, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x3e, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x56, 0x5f, 0x52, 0x45, 0x51, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x4e, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x56, 0x5f, 0x52, 0x45, 0x53, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x71, 0x0a, 0x11, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x45, 0x51,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x69, 0x6e,
	0x69, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x69,
	0x6e, 0x69, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x96,
	0x01, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x4f, 0x72, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x7a, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x4f, 0x72,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x40, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8d, 0x01, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x64, 0x35, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x7a, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x97, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x72,
	0x73, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x44, 0x22,
	0x53, 0x0a, 0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x52,
	0x45, 0x51, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x5b, 0x0a, 0x11, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x22, 0x71, 0x0a, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x73,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xd8, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x47, 0x0a, 0x17, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x9b, 0x0f, 0x0a, 0x05, 0x7a, 0x61, 0x75,
	0x74, 0x68, 0x12, 0x35, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x14, 0x2e, 0x7a,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x52,
	0x45, 0x51, 0x1a, 0x15, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x3f, 0x0a, 0x0c, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x2e, 0x7a, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x13, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x3d, 0x0a, 0x0b, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x2e, 0x7a, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x5f, 0x52, 0x45, 0x51, 0x1a, 0x13, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x3f, 0x0a, 0x0c, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x2e, 0x7a, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x13, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x40, 0x0a, 0x0a, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x18, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x52,
	0x45, 0x51, 0x1a, 0x18, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x35, 0x0a, 0x06,
	0x48, 0x61, 0x73, 0x55, 0x49, 0x44, 0x12, 0x14, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70,
	0x62, 0x2e, 0x48, 0x61, 0x73, 0x55, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x15, 0x2e, 0x7a,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x52, 0x45, 0x53, 0x12, 0x4a, 0x0a, 0x10, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x1c, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x45, 0x53, 0x12,
	0x56, 0x0a, 0x11, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x47, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x65,
	0x74, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x20, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62,
	0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x4a, 0x0a, 0x10, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x7a, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1c, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62,
	0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x5f,
	0x52, 0x45, 0x53, 0x12, 0x4c, 0x0a, 0x0e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x1c, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62,
	0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x5f,
	0x52, 0x45, 0x51, 0x1a, 0x1c, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x5f, 0x52, 0x45,
	0x53, 0x12, 0x35, 0x0a, 0x09, 0x4f, 0x72, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x11,
	0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x15, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x41, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x45, 0x51,
	0x1a, 0x19, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x35, 0x0a, 0x09, 0x4f,
	0x72, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x15, 0x2e, 0x7a, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52,
	0x45, 0x53, 0x12, 0x3d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x18, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x15, 0x2e, 0x7a, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x45,
	0x53, 0x12, 0x43, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x19, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x19, 0x2e, 0x7a, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x3f, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72,
	0x67, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x19, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x67, 0x42, 0x69, 0x6e, 0x64, 0x5f, 0x52, 0x45, 0x51,
	0x1a, 0x15, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x37, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x61, 0x6e, 0x12, 0x15, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x61, 0x6e, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x15, 0x2e, 0x7a, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x52, 0x45, 0x53,
	0x12, 0x55, 0x0a, 0x11, 0x53, 0x4d, 0x53, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x1f, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62,
	0x2e, 0x53, 0x4d, 0x53, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x65,
	0x6e, 0x64, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x1f, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70,
	0x62, 0x2e, 0x53, 0x4d, 0x53, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x4f, 0x0a, 0x13, 0x53, 0x4d, 0x53, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x21,
	0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x4d, 0x53, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x52, 0x45,
	0x51, 0x1a, 0x15, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x3d, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x41, 0x75, 0x74, 0x68, 0x12, 0x17, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x17,
	0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41,
	0x75, 0x74, 0x68, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x43, 0x0a, 0x0d, 0x48, 0x61, 0x73, 0x5a, 0x5a,
	0x5a, 0x5a, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x73, 0x5a, 0x5a, 0x5a, 0x5a, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x15, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x41, 0x0a, 0x0c,
	0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x56, 0x12, 0x1a, 0x2e, 0x7a,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4b, 0x56, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x15, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x52, 0x45, 0x53, 0x12,
	0x46, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x56, 0x12,
	0x1a, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x56, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x1a, 0x2e, 0x7a, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4b, 0x56, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x49, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x1b, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x5f, 0x52,
	0x45, 0x53, 0x12, 0x41, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x19, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x17, 0x2e, 0x7a,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x45, 0x0a, 0x0d, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70,
	0x62, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x52, 0x45, 0x51, 0x1a, 0x17, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x55, 0x0a, 0x11,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x1f, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x52,
	0x45, 0x51, 0x1a, 0x1f, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x52, 0x45, 0x53, 0x12, 0x51, 0x0a, 0x13, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x7a, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x41, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x17, 0x2e,
	0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x5f, 0x52, 0x45, 0x53, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x7a, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zauth_proto_rawDescOnce sync.Once
	file_zauth_proto_rawDescData = file_zauth_proto_rawDesc
)

func file_zauth_proto_rawDescGZIP() []byte {
	file_zauth_proto_rawDescOnce.Do(func() {
		file_zauth_proto_rawDescData = protoimpl.X.CompressGZIP(file_zauth_proto_rawDescData)
	})
	return file_zauth_proto_rawDescData
}

var file_zauth_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_zauth_proto_goTypes = []interface{}{
	(*Default_REQ)(nil),             // 0: zauth_pb.Default_REQ
	(*Default_RES)(nil),             // 1: zauth_pb.Default_RES
	(*UserInfo)(nil),                // 2: zauth_pb.UserInfo
	(*LoginByPhone_REQ)(nil),        // 3: zauth_pb.LoginByPhone_REQ
	(*LoginByName_REQ)(nil),         // 4: zauth_pb.LoginByName_REQ
	(*LoginByToken_REQ)(nil),        // 5: zauth_pb.LoginByToken_REQ
	(*Login_RES)(nil),               // 6: zauth_pb.Login_RES
	(*LoginCheck_REQ)(nil),          // 7: zauth_pb.LoginCheck_REQ
	(*LoginCheck_RES)(nil),          // 8: zauth_pb.LoginCheck_RES
	(*Logout_REQ)(nil),              // 9: zauth_pb.Logout_REQ
	(*CheckAuth_REQ)(nil),           // 10: zauth_pb.CheckAuth_REQ
	(*CheckAuth_RES)(nil),           // 11: zauth_pb.CheckAuth_RES
	(*HasUID_REQ)(nil),              // 12: zauth_pb.HasUID_REQ
	(*PermissionInfo)(nil),          // 13: zauth_pb.PermissionInfo
	(*PermissionBindInfo)(nil),      // 14: zauth_pb.PermissionBindInfo
	(*PermissionInfo_RES)(nil),      // 15: zauth_pb.PermissionInfo_RES
	(*PermissionInfoList_RES)(nil),  // 16: zauth_pb.PermissionInfoList_RES
	(*PermissionListGet_REQ)(nil),   // 17: zauth_pb.PermissionListGet_REQ
	(*PermissionBind_REQ)(nil),      // 18: zauth_pb.PermissionBind_REQ
	(*PermissionBind_RES)(nil),      // 19: zauth_pb.PermissionBind_RES
	(*OrgInfo)(nil),                 // 20: zauth_pb.OrgInfo
	(*OrgInfo_RES)(nil),             // 21: zauth_pb.OrgInfo_RES
	(*OrgInfoList_RES)(nil),         // 22: zauth_pb.OrgInfoList_RES
	(*GetOrgList_REQ)(nil),          // 23: zauth_pb.GetOrgList_REQ
	(*GetOrgInfo_REQ)(nil),          // 24: zauth_pb.GetOrgInfo_REQ
	(*UserBan_REQ)(nil),             // 25: zauth_pb.UserBan_REQ
	(*UserOrgBind_REQ)(nil),         // 26: zauth_pb.UserOrgBind_REQ
	(*GetOrgUsers_REQ)(nil),         // 27: zauth_pb.GetOrgUsers_REQ
	(*GetOrgUsers_RES)(nil),         // 28: zauth_pb.GetOrgUsers_RES
	(*SMSVerifyCodeSend_REQ)(nil),   // 29: zauth_pb.SMSVerifyCodeSend_REQ
	(*SMSSendVerifyCode_RES)(nil),   // 30: zauth_pb.SMSSendVerifyCode_RES
	(*SMSVerifyCodeVerify_REQ)(nil), // 31: zauth_pb.SMSVerifyCodeVerify_REQ
	(*HasZZZZString_REQ)(nil),       // 32: zauth_pb.HasZZZZString_REQ
	(*SetServiceKV_REQ)(nil),        // 33: zauth_pb.SetServiceKV_REQ
	(*GetServiceKV_REQ)(nil),        // 34: zauth_pb.GetServiceKV_REQ
	(*GetServiceKV_RES)(nil),        // 35: zauth_pb.GetServiceKV_RES
	(*ServiceRegist_REQ)(nil),       // 36: zauth_pb.ServiceRegist_REQ
	(*ServiceRegist_RES)(nil),       // 37: zauth_pb.ServiceRegist_RES
	(*AssetInfo)(nil),               // 38: zauth_pb.AssetInfo
	(*AssetInfo_RES)(nil),           // 39: zauth_pb.AssetInfo_RES
	(*ConfigAssetInfo)(nil),         // 40: zauth_pb.ConfigAssetInfo
	(*UploadAsset_REQ)(nil),         // 41: zauth_pb.UploadAsset_REQ
	(*DownloadAsset_REQ)(nil),       // 42: zauth_pb.DownloadAsset_REQ
	(*UploadConfigAsset_REQ)(nil),   // 43: zauth_pb.UploadConfigAsset_REQ
	(*UploadConfigAsset_RES)(nil),   // 44: zauth_pb.UploadConfigAsset_RES
	(*DownloadConfigAsset_REQ)(nil), // 45: zauth_pb.DownloadConfigAsset_REQ
}
var file_zauth_proto_depIdxs = []int32{
	2,  // 0: zauth_pb.Login_RES.userInfo:type_name -> zauth_pb.UserInfo
	2,  // 1: zauth_pb.LoginCheck_RES.userInfo:type_name -> zauth_pb.UserInfo
	13, // 2: zauth_pb.PermissionInfo_RES.info:type_name -> zauth_pb.PermissionInfo
	13, // 3: zauth_pb.PermissionInfoList_RES.list:type_name -> zauth_pb.PermissionInfo
	14, // 4: zauth_pb.PermissionBind_RES.info:type_name -> zauth_pb.PermissionBindInfo
	20, // 5: zauth_pb.OrgInfo_RES.info:type_name -> zauth_pb.OrgInfo
	20, // 6: zauth_pb.OrgInfoList_RES.list:type_name -> zauth_pb.OrgInfo
	2,  // 7: zauth_pb.GetOrgUsers_RES.list:type_name -> zauth_pb.UserInfo
	13, // 8: zauth_pb.ServiceRegist_REQ.initPermissions:type_name -> zauth_pb.PermissionInfo
	20, // 9: zauth_pb.ServiceRegist_RES.OrgInfo:type_name -> zauth_pb.OrgInfo
	13, // 10: zauth_pb.ServiceRegist_RES.permissionInfo:type_name -> zauth_pb.PermissionInfo
	38, // 11: zauth_pb.AssetInfo_RES.info:type_name -> zauth_pb.AssetInfo
	38, // 12: zauth_pb.UploadConfigAsset_RES.assetInfo:type_name -> zauth_pb.AssetInfo
	38, // 13: zauth_pb.UploadConfigAsset_RES.parserAssetInfo:type_name -> zauth_pb.AssetInfo
	40, // 14: zauth_pb.UploadConfigAsset_RES.configInfo:type_name -> zauth_pb.ConfigAssetInfo
	9,  // 15: zauth_pb.zauth.Logout:input_type -> zauth_pb.Logout_REQ
	3,  // 16: zauth_pb.zauth.LoginByPhone:input_type -> zauth_pb.LoginByPhone_REQ
	4,  // 17: zauth_pb.zauth.LoginByName:input_type -> zauth_pb.LoginByName_REQ
	5,  // 18: zauth_pb.zauth.LoginByToken:input_type -> zauth_pb.LoginByToken_REQ
	7,  // 19: zauth_pb.zauth.LoginCheck:input_type -> zauth_pb.LoginCheck_REQ
	12, // 20: zauth_pb.zauth.HasUID:input_type -> zauth_pb.HasUID_REQ
	13, // 21: zauth_pb.zauth.PermissionCreate:input_type -> zauth_pb.PermissionInfo
	17, // 22: zauth_pb.zauth.PermissionListGet:input_type -> zauth_pb.PermissionListGet_REQ
	13, // 23: zauth_pb.zauth.PermissionUpdate:input_type -> zauth_pb.PermissionInfo
	18, // 24: zauth_pb.zauth.PermissionBind:input_type -> zauth_pb.PermissionBind_REQ
	20, // 25: zauth_pb.zauth.OrgCreate:input_type -> zauth_pb.OrgInfo
	23, // 26: zauth_pb.zauth.GetOrgList:input_type -> zauth_pb.GetOrgList_REQ
	20, // 27: zauth_pb.zauth.OrgUpdate:input_type -> zauth_pb.OrgInfo
	24, // 28: zauth_pb.zauth.GetOrgInfo:input_type -> zauth_pb.GetOrgInfo_REQ
	27, // 29: zauth_pb.zauth.GetOrgUsers:input_type -> zauth_pb.GetOrgUsers_REQ
	26, // 30: zauth_pb.zauth.UserOrgBind:input_type -> zauth_pb.UserOrgBind_REQ
	25, // 31: zauth_pb.zauth.UserBan:input_type -> zauth_pb.UserBan_REQ
	29, // 32: zauth_pb.zauth.SMSVerifyCodeSend:input_type -> zauth_pb.SMSVerifyCodeSend_REQ
	31, // 33: zauth_pb.zauth.SMSVerifyCodeVerify:input_type -> zauth_pb.SMSVerifyCodeVerify_REQ
	10, // 34: zauth_pb.zauth.CheckAuth:input_type -> zauth_pb.CheckAuth_REQ
	32, // 35: zauth_pb.zauth.HasZZZZString:input_type -> zauth_pb.HasZZZZString_REQ
	33, // 36: zauth_pb.zauth.SetServiceKV:input_type -> zauth_pb.SetServiceKV_REQ
	34, // 37: zauth_pb.zauth.GetServiceKV:input_type -> zauth_pb.GetServiceKV_REQ
	36, // 38: zauth_pb.zauth.ServiceRegist:input_type -> zauth_pb.ServiceRegist_REQ
	41, // 39: zauth_pb.zauth.UploadAsset:input_type -> zauth_pb.UploadAsset_REQ
	42, // 40: zauth_pb.zauth.DownloadAsset:input_type -> zauth_pb.DownloadAsset_REQ
	43, // 41: zauth_pb.zauth.UploadConfigAsset:input_type -> zauth_pb.UploadConfigAsset_REQ
	45, // 42: zauth_pb.zauth.DownloadConfigAsset:input_type -> zauth_pb.DownloadConfigAsset_REQ
	1,  // 43: zauth_pb.zauth.Logout:output_type -> zauth_pb.Default_RES
	6,  // 44: zauth_pb.zauth.LoginByPhone:output_type -> zauth_pb.Login_RES
	6,  // 45: zauth_pb.zauth.LoginByName:output_type -> zauth_pb.Login_RES
	6,  // 46: zauth_pb.zauth.LoginByToken:output_type -> zauth_pb.Login_RES
	8,  // 47: zauth_pb.zauth.LoginCheck:output_type -> zauth_pb.LoginCheck_RES
	1,  // 48: zauth_pb.zauth.HasUID:output_type -> zauth_pb.Default_RES
	15, // 49: zauth_pb.zauth.PermissionCreate:output_type -> zauth_pb.PermissionInfo_RES
	16, // 50: zauth_pb.zauth.PermissionListGet:output_type -> zauth_pb.PermissionInfoList_RES
	15, // 51: zauth_pb.zauth.PermissionUpdate:output_type -> zauth_pb.PermissionInfo_RES
	19, // 52: zauth_pb.zauth.PermissionBind:output_type -> zauth_pb.PermissionBind_RES
	21, // 53: zauth_pb.zauth.OrgCreate:output_type -> zauth_pb.OrgInfo_RES
	22, // 54: zauth_pb.zauth.GetOrgList:output_type -> zauth_pb.OrgInfoList_RES
	21, // 55: zauth_pb.zauth.OrgUpdate:output_type -> zauth_pb.OrgInfo_RES
	21, // 56: zauth_pb.zauth.GetOrgInfo:output_type -> zauth_pb.OrgInfo_RES
	28, // 57: zauth_pb.zauth.GetOrgUsers:output_type -> zauth_pb.GetOrgUsers_RES
	1,  // 58: zauth_pb.zauth.UserOrgBind:output_type -> zauth_pb.Default_RES
	1,  // 59: zauth_pb.zauth.UserBan:output_type -> zauth_pb.Default_RES
	30, // 60: zauth_pb.zauth.SMSVerifyCodeSend:output_type -> zauth_pb.SMSSendVerifyCode_RES
	1,  // 61: zauth_pb.zauth.SMSVerifyCodeVerify:output_type -> zauth_pb.Default_RES
	11, // 62: zauth_pb.zauth.CheckAuth:output_type -> zauth_pb.CheckAuth_RES
	1,  // 63: zauth_pb.zauth.HasZZZZString:output_type -> zauth_pb.Default_RES
	1,  // 64: zauth_pb.zauth.SetServiceKV:output_type -> zauth_pb.Default_RES
	35, // 65: zauth_pb.zauth.GetServiceKV:output_type -> zauth_pb.GetServiceKV_RES
	37, // 66: zauth_pb.zauth.ServiceRegist:output_type -> zauth_pb.ServiceRegist_RES
	39, // 67: zauth_pb.zauth.UploadAsset:output_type -> zauth_pb.AssetInfo_RES
	39, // 68: zauth_pb.zauth.DownloadAsset:output_type -> zauth_pb.AssetInfo_RES
	44, // 69: zauth_pb.zauth.UploadConfigAsset:output_type -> zauth_pb.UploadConfigAsset_RES
	39, // 70: zauth_pb.zauth.DownloadConfigAsset:output_type -> zauth_pb.AssetInfo_RES
	43, // [43:71] is the sub-list for method output_type
	15, // [15:43] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_zauth_proto_init() }
func file_zauth_proto_init() {
	if File_zauth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zauth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Default_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Default_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginByPhone_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginByName_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginByToken_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Login_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginCheck_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginCheck_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Logout_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAuth_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAuth_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasUID_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionBindInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionInfo_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionInfoList_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionListGet_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionBind_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionBind_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgInfo_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgInfoList_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgList_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgInfo_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBan_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOrgBind_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgUsers_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgUsers_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMSVerifyCodeSend_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMSSendVerifyCode_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMSVerifyCodeVerify_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasZZZZString_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetServiceKV_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceKV_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceKV_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceRegist_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceRegist_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetInfo_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigAssetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadAsset_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadAsset_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadConfigAsset_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadConfigAsset_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadConfigAsset_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zauth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_zauth_proto_goTypes,
		DependencyIndexes: file_zauth_proto_depIdxs,
		MessageInfos:      file_zauth_proto_msgTypes,
	}.Build()
	File_zauth_proto = out.File
	file_zauth_proto_rawDesc = nil
	file_zauth_proto_goTypes = nil
	file_zauth_proto_depIdxs = nil
}
