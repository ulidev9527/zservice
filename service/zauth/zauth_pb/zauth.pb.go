// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: zauth.proto

package zauth_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Default_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Default_REQ) Reset() {
	*x = Default_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_REQ) ProtoMessage() {}

func (x *Default_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_REQ.ProtoReflect.Descriptor instead.
func (*Default_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{0}
}

type Default_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
}

func (x *Default_RES) Reset() {
	*x = Default_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Default_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Default_RES) ProtoMessage() {}

func (x *Default_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Default_RES.ProtoReflect.Descriptor instead.
func (*Default_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{1}
}

func (x *Default_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

// 账户/登陆相关
type LoginByPhone_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone      string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`           // 手机号 +86****
	Expires    uint32 `protobuf:"varint,2,opt,name=expires,proto3" json:"expires,omitempty"`      // 过期时间 没有传入 (单位: 秒)，最小 30s，过期时间到了后需要重新授权
	VerifyCode string `protobuf:"bytes,3,opt,name=verifyCode,proto3" json:"verifyCode,omitempty"` // 验证码
}

func (x *LoginByPhone_REQ) Reset() {
	*x = LoginByPhone_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginByPhone_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByPhone_REQ) ProtoMessage() {}

func (x *LoginByPhone_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByPhone_REQ.ProtoReflect.Descriptor instead.
func (*LoginByPhone_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{2}
}

func (x *LoginByPhone_REQ) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *LoginByPhone_REQ) GetExpires() uint32 {
	if x != nil {
		return x.Expires
	}
	return 0
}

func (x *LoginByPhone_REQ) GetVerifyCode() string {
	if x != nil {
		return x.VerifyCode
	}
	return ""
}

type LoginByUser_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`         // 账号
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 密码
	Expires  uint32 `protobuf:"varint,3,opt,name=expires,proto3" json:"expires,omitempty"`  // 过期时间 没有传入 (单位: 秒)，最小 30s，过期时间到了后需要重新授权
}

func (x *LoginByUser_REQ) Reset() {
	*x = LoginByUser_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginByUser_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByUser_REQ) ProtoMessage() {}

func (x *LoginByUser_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByUser_REQ.ProtoReflect.Descriptor instead.
func (*LoginByUser_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{3}
}

func (x *LoginByUser_REQ) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *LoginByUser_REQ) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginByUser_REQ) GetExpires() uint32 {
	if x != nil {
		return x.Expires
	}
	return 0
}

type Login_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	Uid  uint32 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`   // 用户ID
}

func (x *Login_RES) Reset() {
	*x = Login_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Login_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Login_RES) ProtoMessage() {}

func (x *Login_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Login_RES.ProtoReflect.Descriptor instead.
func (*Login_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{4}
}

func (x *Login_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Login_RES) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type CheckAuth_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth string `protobuf:"bytes,2,opt,name=Auth,proto3" json:"Auth,omitempty"` // 权限, 字符串数组，[服务名, 动作, 路径]
}

func (x *CheckAuth_REQ) Reset() {
	*x = CheckAuth_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAuth_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAuth_REQ) ProtoMessage() {}

func (x *CheckAuth_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAuth_REQ.ProtoReflect.Descriptor instead.
func (*CheckAuth_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{5}
}

func (x *CheckAuth_REQ) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

type CheckAuth_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                     // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	IsTokenRefresh bool   `protobuf:"varint,2,opt,name=isTokenRefresh,proto3" json:"isTokenRefresh,omitempty"` // 是否需要刷新token, true 表示需要，不受错误码影响
	Token          string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`                    // 新的令牌， IsTokenRefresh 和 Token 为固定格式，不受错误码影响
	Uid            uint32 `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`                       // 用户ID
}

func (x *CheckAuth_RES) Reset() {
	*x = CheckAuth_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAuth_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAuth_RES) ProtoMessage() {}

func (x *CheckAuth_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAuth_RES.ProtoReflect.Descriptor instead.
func (*CheckAuth_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{6}
}

func (x *CheckAuth_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckAuth_RES) GetIsTokenRefresh() bool {
	if x != nil {
		return x.IsTokenRefresh
	}
	return false
}

func (x *CheckAuth_RES) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CheckAuth_RES) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type HasUID_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint32 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"` // 账号ID
}

func (x *HasUID_REQ) Reset() {
	*x = HasUID_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasUID_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasUID_REQ) ProtoMessage() {}

func (x *HasUID_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasUID_REQ.ProtoReflect.Descriptor instead.
func (*HasUID_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{7}
}

func (x *HasUID_REQ) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

// 权限相关
type PermissionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`          // 权限ID
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`       // 权限名称
	Service string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"` // 权限所属服务
	Action  string `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`   // 动作名称
	Path    string `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`       // 权限路径
	State   uint32 `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"`    // 权限状态 0禁用 1公开访问 2授权访问 3继承父级
}

func (x *PermissionInfo) Reset() {
	*x = PermissionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionInfo) ProtoMessage() {}

func (x *PermissionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionInfo.ProtoReflect.Descriptor instead.
func (*PermissionInfo) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{8}
}

func (x *PermissionInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PermissionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PermissionInfo) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *PermissionInfo) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *PermissionInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PermissionInfo) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

type PermissionInfo_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	Info *PermissionInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`  // 权限
}

func (x *PermissionInfo_RES) Reset() {
	*x = PermissionInfo_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionInfo_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionInfo_RES) ProtoMessage() {}

func (x *PermissionInfo_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionInfo_RES.ProtoReflect.Descriptor instead.
func (*PermissionInfo_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{9}
}

func (x *PermissionInfo_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PermissionInfo_RES) GetInfo() *PermissionInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type PermissionInfoList_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	List []*PermissionInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`  // 权限列表
}

func (x *PermissionInfoList_RES) Reset() {
	*x = PermissionInfoList_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionInfoList_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionInfoList_RES) ProtoMessage() {}

func (x *PermissionInfoList_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionInfoList_RES.ProtoReflect.Descriptor instead.
func (*PermissionInfoList_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{10}
}

func (x *PermissionInfoList_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PermissionInfoList_RES) GetList() []*PermissionInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type PermissionListGet_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`    // 第几页
	Size   uint32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`    // 每页多少条
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"` // 搜索关键字
}

func (x *PermissionListGet_REQ) Reset() {
	*x = PermissionListGet_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionListGet_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionListGet_REQ) ProtoMessage() {}

func (x *PermissionListGet_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionListGet_REQ.ProtoReflect.Descriptor instead.
func (*PermissionListGet_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{11}
}

func (x *PermissionListGet_REQ) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PermissionListGet_REQ) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PermissionListGet_REQ) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type PermissionBind_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermissionID uint32 `protobuf:"varint,1,opt,name=permissionID,proto3" json:"permissionID,omitempty"` // 权限ID
	TargetType   uint32 `protobuf:"varint,2,opt,name=targetType,proto3" json:"targetType,omitempty"`     // 权限类型 1组织 2账号
	TargetID     uint32 `protobuf:"varint,3,opt,name=targetID,proto3" json:"targetID,omitempty"`         // 权限对象ID
	Expires      uint64 `protobuf:"varint,4,opt,name=expires,proto3" json:"expires,omitempty"`           // 过期时间
	State        uint32 `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`               // 是否允许访问 0禁止 1允许
}

func (x *PermissionBind_REQ) Reset() {
	*x = PermissionBind_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionBind_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionBind_REQ) ProtoMessage() {}

func (x *PermissionBind_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionBind_REQ.ProtoReflect.Descriptor instead.
func (*PermissionBind_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{12}
}

func (x *PermissionBind_REQ) GetPermissionID() uint32 {
	if x != nil {
		return x.PermissionID
	}
	return 0
}

func (x *PermissionBind_REQ) GetTargetType() uint32 {
	if x != nil {
		return x.TargetType
	}
	return 0
}

func (x *PermissionBind_REQ) GetTargetID() uint32 {
	if x != nil {
		return x.TargetID
	}
	return 0
}

func (x *PermissionBind_REQ) GetExpires() uint64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

func (x *PermissionBind_REQ) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

// 组织相关
type OrgInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`             // 组织ID
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`          // 组织名称
	RootID   uint32 `protobuf:"varint,3,opt,name=rootID,proto3" json:"rootID,omitempty"`     // 根组织ID
	ParentID uint32 `protobuf:"varint,4,opt,name=parentID,proto3" json:"parentID,omitempty"` // 父组织ID
	State    uint32 `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`       // 组织状态 0禁用 1公开访问 2授权访问 3继承父级
}

func (x *OrgInfo) Reset() {
	*x = OrgInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgInfo) ProtoMessage() {}

func (x *OrgInfo) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgInfo.ProtoReflect.Descriptor instead.
func (*OrgInfo) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{13}
}

func (x *OrgInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrgInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrgInfo) GetRootID() uint32 {
	if x != nil {
		return x.RootID
	}
	return 0
}

func (x *OrgInfo) GetParentID() uint32 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *OrgInfo) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

type OrgInfo_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	Info *OrgInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`  // 组织
}

func (x *OrgInfo_RES) Reset() {
	*x = OrgInfo_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgInfo_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgInfo_RES) ProtoMessage() {}

func (x *OrgInfo_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgInfo_RES.ProtoReflect.Descriptor instead.
func (*OrgInfo_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{14}
}

func (x *OrgInfo_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OrgInfo_RES) GetInfo() *OrgInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type OrgInfoList_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	List []*OrgInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`  // 组织列表
}

func (x *OrgInfoList_RES) Reset() {
	*x = OrgInfoList_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgInfoList_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgInfoList_RES) ProtoMessage() {}

func (x *OrgInfoList_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgInfoList_RES.ProtoReflect.Descriptor instead.
func (*OrgInfoList_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{15}
}

func (x *OrgInfoList_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OrgInfoList_RES) GetList() []*OrgInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type OrgListGet_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`    // 第几页
	Size   uint32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`    // 每页多少条
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"` // 搜索关键字
}

func (x *OrgListGet_REQ) Reset() {
	*x = OrgListGet_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgListGet_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgListGet_REQ) ProtoMessage() {}

func (x *OrgListGet_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgListGet_REQ.ProtoReflect.Descriptor instead.
func (*OrgListGet_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{16}
}

func (x *OrgListGet_REQ) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *OrgListGet_REQ) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *OrgListGet_REQ) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

// 短信相关
type SMSVerifyCodeSend_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone      string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`           // 手机号 必须带有 +86
	VerifyCode string `protobuf:"bytes,2,opt,name=verifyCode,proto3" json:"verifyCode,omitempty"` // 接口验证码，如果需要就上传
}

func (x *SMSVerifyCodeSend_REQ) Reset() {
	*x = SMSVerifyCodeSend_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMSVerifyCodeSend_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMSVerifyCodeSend_REQ) ProtoMessage() {}

func (x *SMSVerifyCodeSend_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMSVerifyCodeSend_REQ.ProtoReflect.Descriptor instead.
func (*SMSVerifyCodeSend_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{17}
}

func (x *SMSVerifyCodeSend_REQ) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SMSVerifyCodeSend_REQ) GetVerifyCode() string {
	if x != nil {
		return x.VerifyCode
	}
	return ""
}

type SMSSendVerifyCode_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`            // 状态
	VerifyCode string `protobuf:"bytes,2,opt,name=verifyCode,proto3" json:"verifyCode,omitempty"` // 验证码
}

func (x *SMSSendVerifyCode_RES) Reset() {
	*x = SMSSendVerifyCode_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMSSendVerifyCode_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMSSendVerifyCode_RES) ProtoMessage() {}

func (x *SMSSendVerifyCode_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMSSendVerifyCode_RES.ProtoReflect.Descriptor instead.
func (*SMSSendVerifyCode_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{18}
}

func (x *SMSSendVerifyCode_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SMSSendVerifyCode_RES) GetVerifyCode() string {
	if x != nil {
		return x.VerifyCode
	}
	return ""
}

type SMSVerifyCodeVerify_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone      string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`           // 手机号 必须带有 +86
	VerifyCode string `protobuf:"bytes,2,opt,name=verifyCode,proto3" json:"verifyCode,omitempty"` // 验证码
}

func (x *SMSVerifyCodeVerify_REQ) Reset() {
	*x = SMSVerifyCodeVerify_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMSVerifyCodeVerify_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMSVerifyCodeVerify_REQ) ProtoMessage() {}

func (x *SMSVerifyCodeVerify_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMSVerifyCodeVerify_REQ.ProtoReflect.Descriptor instead.
func (*SMSVerifyCodeVerify_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{19}
}

func (x *SMSVerifyCodeVerify_REQ) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SMSVerifyCodeVerify_REQ) GetVerifyCode() string {
	if x != nil {
		return x.VerifyCode
	}
	return ""
}

// 其它
type HasZZZZString_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str string `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"` // 字符串
}

func (x *HasZZZZString_REQ) Reset() {
	*x = HasZZZZString_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasZZZZString_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasZZZZString_REQ) ProtoMessage() {}

func (x *HasZZZZString_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasZZZZString_REQ.ProtoReflect.Descriptor instead.
func (*HasZZZZString_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{20}
}

func (x *HasZZZZString_REQ) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

// 配置相关
type ConfigGetFileConfig_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"` // 文件名
	Keys     string `protobuf:"bytes,2,opt,name=keys,proto3" json:"keys,omitempty"`         // key 需要返回哪些值, 空值返回全部
	Service  string `protobuf:"bytes,3,opt,name=Service,proto3" json:"Service,omitempty"`   // 服务名
}

func (x *ConfigGetFileConfig_REQ) Reset() {
	*x = ConfigGetFileConfig_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigGetFileConfig_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGetFileConfig_REQ) ProtoMessage() {}

func (x *ConfigGetFileConfig_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGetFileConfig_REQ.ProtoReflect.Descriptor instead.
func (*ConfigGetFileConfig_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{21}
}

func (x *ConfigGetFileConfig_REQ) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ConfigGetFileConfig_REQ) GetKeys() string {
	if x != nil {
		return x.Keys
	}
	return ""
}

func (x *ConfigGetFileConfig_REQ) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type ConfigGetFileConfig_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`  // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // 返回的数据，根据情况不同返回数据不同
}

func (x *ConfigGetFileConfig_RES) Reset() {
	*x = ConfigGetFileConfig_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigGetFileConfig_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGetFileConfig_RES) ProtoMessage() {}

func (x *ConfigGetFileConfig_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGetFileConfig_RES.ProtoReflect.Descriptor instead.
func (*ConfigGetFileConfig_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{22}
}

func (x *ConfigGetFileConfig_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ConfigGetFileConfig_RES) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ConfigSyncServiceFileConfig_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath string `protobuf:"bytes,1,opt,name=filePath,proto3" json:"filePath,omitempty"` // 文件路径
	Service  string `protobuf:"bytes,2,opt,name=Service,proto3" json:"Service,omitempty"`   // 服务名
	Parser   uint32 `protobuf:"varint,3,opt,name=parser,proto3" json:"parser,omitempty"`    // 解析器
}

func (x *ConfigSyncServiceFileConfig_REQ) Reset() {
	*x = ConfigSyncServiceFileConfig_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigSyncServiceFileConfig_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSyncServiceFileConfig_REQ) ProtoMessage() {}

func (x *ConfigSyncServiceFileConfig_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSyncServiceFileConfig_REQ.ProtoReflect.Descriptor instead.
func (*ConfigSyncServiceFileConfig_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{23}
}

func (x *ConfigSyncServiceFileConfig_REQ) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *ConfigSyncServiceFileConfig_REQ) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ConfigSyncServiceFileConfig_REQ) GetParser() uint32 {
	if x != nil {
		return x.Parser
	}
	return 0
}

type ConfigSyncServiceEnvConfig_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath string `protobuf:"bytes,1,opt,name=filePath,proto3" json:"filePath,omitempty"` // 文件路径
	Service  string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`   // 服务名
}

func (x *ConfigSyncServiceEnvConfig_REQ) Reset() {
	*x = ConfigSyncServiceEnvConfig_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigSyncServiceEnvConfig_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSyncServiceEnvConfig_REQ) ProtoMessage() {}

func (x *ConfigSyncServiceEnvConfig_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSyncServiceEnvConfig_REQ.ProtoReflect.Descriptor instead.
func (*ConfigSyncServiceEnvConfig_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{24}
}

func (x *ConfigSyncServiceEnvConfig_REQ) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *ConfigSyncServiceEnvConfig_REQ) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type ConfigSyncServiceEnvConfig_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	Auth string `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`  // 授权码
}

func (x *ConfigSyncServiceEnvConfig_RES) Reset() {
	*x = ConfigSyncServiceEnvConfig_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigSyncServiceEnvConfig_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSyncServiceEnvConfig_RES) ProtoMessage() {}

func (x *ConfigSyncServiceEnvConfig_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSyncServiceEnvConfig_RES.ProtoReflect.Descriptor instead.
func (*ConfigSyncServiceEnvConfig_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{25}
}

func (x *ConfigSyncServiceEnvConfig_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ConfigSyncServiceEnvConfig_RES) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

type ConfigGetServiceEnvConfig_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth string `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"` // 授权码
}

func (x *ConfigGetServiceEnvConfig_REQ) Reset() {
	*x = ConfigGetServiceEnvConfig_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigGetServiceEnvConfig_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGetServiceEnvConfig_REQ) ProtoMessage() {}

func (x *ConfigGetServiceEnvConfig_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGetServiceEnvConfig_REQ.ProtoReflect.Descriptor instead.
func (*ConfigGetServiceEnvConfig_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{26}
}

func (x *ConfigGetServiceEnvConfig_REQ) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

type ConfigGetServiceEnvConfig_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`  // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // 返回的数据
}

func (x *ConfigGetServiceEnvConfig_RES) Reset() {
	*x = ConfigGetServiceEnvConfig_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigGetServiceEnvConfig_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGetServiceEnvConfig_RES) ProtoMessage() {}

func (x *ConfigGetServiceEnvConfig_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGetServiceEnvConfig_RES.ProtoReflect.Descriptor instead.
func (*ConfigGetServiceEnvConfig_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{27}
}

func (x *ConfigGetServiceEnvConfig_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ConfigGetServiceEnvConfig_RES) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ConfigGetEnvConfig_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"` // 服务名
}

func (x *ConfigGetEnvConfig_REQ) Reset() {
	*x = ConfigGetEnvConfig_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigGetEnvConfig_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGetEnvConfig_REQ) ProtoMessage() {}

func (x *ConfigGetEnvConfig_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGetEnvConfig_REQ.ProtoReflect.Descriptor instead.
func (*ConfigGetEnvConfig_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{28}
}

func (x *ConfigGetEnvConfig_REQ) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

// 资源
type AssetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`      // 文件名
	Md5    string `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`        // 文件md5
	Token  string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`    // 资源访问标识, 使用标识可以进行资源的访问
	Expire int64  `protobuf:"varint,4,opt,name=expire,proto3" json:"expire,omitempty"` // 过期时间
	Size   uint64 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`     // 文件大小
	Data   []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`      // 文件数据
}

func (x *AssetInfo) Reset() {
	*x = AssetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetInfo) ProtoMessage() {}

func (x *AssetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetInfo.ProtoReflect.Descriptor instead.
func (*AssetInfo) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{29}
}

func (x *AssetInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AssetInfo) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *AssetInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AssetInfo) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *AssetInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AssetInfo) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddAsset_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`           // 文件全名, 文件全名 包括后缀
	Expire    int64  `protobuf:"varint,2,opt,name=expire,proto3" json:"expire,omitempty"`      // 过期时间
	FileBytes []byte `protobuf:"bytes,3,opt,name=fileBytes,proto3" json:"fileBytes,omitempty"` // 文件数据
}

func (x *AddAsset_REQ) Reset() {
	*x = AddAsset_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAsset_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAsset_REQ) ProtoMessage() {}

func (x *AddAsset_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAsset_REQ.ProtoReflect.Descriptor instead.
func (*AddAsset_REQ) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{30}
}

func (x *AddAsset_REQ) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddAsset_REQ) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *AddAsset_REQ) GetFileBytes() []byte {
	if x != nil {
		return x.FileBytes
	}
	return nil
}

type AssetInfo_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 服务状态码 约定: 1 表示成功, 其它数字根据业务进行返回
	Info *AssetInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`  // 资源信息
}

func (x *AssetInfo_RES) Reset() {
	*x = AssetInfo_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zauth_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetInfo_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetInfo_RES) ProtoMessage() {}

func (x *AssetInfo_RES) ProtoReflect() protoreflect.Message {
	mi := &file_zauth_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetInfo_RES.ProtoReflect.Descriptor instead.
func (*AssetInfo_RES) Descriptor() ([]byte, []int) {
	return file_zauth_proto_rawDescGZIP(), []int{31}
}

func (x *AssetInfo_RES) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AssetInfo_RES) GetInfo() *AssetInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_zauth_proto protoreflect.FileDescriptor

var file_zauth_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x7a,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x22, 0x0d, 0x0a, 0x0b, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x52, 0x45, 0x51, 0x22, 0x21, 0x0a, 0x0b, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x62, 0x0a, 0x10, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x5b, 0x0a,
	0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x52, 0x45, 0x51,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x22, 0x31, 0x0a, 0x09, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x23, 0x0a,
	0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x12,
	0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x75,
	0x74, 0x68, 0x22, 0x73, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x5f,
	0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x69, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x0a, 0x48, 0x61, 0x73, 0x55, 0x49,
	0x44, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x0e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x56, 0x0a, 0x12, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x45, 0x53,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0x5a, 0x0a, 0x16, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x57,
	0x0a, 0x15, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x47, 0x65, 0x74, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0xa4, 0x01, 0x0a, 0x12, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x77,
	0x0a, 0x07, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x48, 0x0a, 0x0b, 0x4f, 0x72, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x4c, 0x0a, 0x0f, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70,
	0x62, 0x2e, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x50, 0x0a, 0x0e, 0x4f, 0x72, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x65, 0x74, 0x5f, 0x52, 0x45,
	0x51, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x22, 0x4d, 0x0a, 0x15, 0x53, 0x4d, 0x53, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x4b, 0x0a, 0x15, 0x53, 0x4d, 0x53, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4f, 0x0a,
	0x17, 0x53, 0x4d, 0x53, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x25,
	0x0a, 0x11, 0x48, 0x61, 0x73, 0x5a, 0x5a, 0x5a, 0x5a, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x52, 0x45, 0x51, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x74, 0x72, 0x22, 0x63, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x52, 0x45, 0x51,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x43, 0x0a, 0x17, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x6f, 0x0a, 0x1f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x52,
	0x45, 0x51, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18,
	0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x73,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72,
	0x22, 0x56, 0x0a, 0x1e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x76, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x52,
	0x45, 0x51, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x48, 0x0a, 0x1e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x76,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x22, 0x33, 0x0a, 0x1d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x76, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x52, 0x45, 0x51, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x49, 0x0a, 0x1d, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x76, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x32, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x45,
	0x6e, 0x76, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x58, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x52, 0x45, 0x51,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x0d, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x27, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0xc2, 0x0d, 0x0a, 0x05, 0x7a, 0x61, 0x75,
	0x74, 0x68, 0x12, 0x36, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x15, 0x2e, 0x7a,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x52, 0x45, 0x51, 0x1a, 0x15, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x3f, 0x0a, 0x0c, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x2e, 0x7a, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x13, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70,
	0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x3d, 0x0a, 0x0b, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x7a, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x13, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x3a, 0x0a, 0x0a, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x15, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x52, 0x45, 0x51, 0x1a,
	0x15, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x35, 0x0a, 0x06, 0x48, 0x61, 0x73, 0x55, 0x49, 0x44,
	0x12, 0x14, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x73, 0x55,
	0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x15, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x4a, 0x0a,
	0x10, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1c, 0x2e, 0x7a, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x56, 0x0a, 0x11, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x65, 0x74, 0x12, 0x1f,
	0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x65, 0x74, 0x5f, 0x52, 0x45, 0x51, 0x1a,
	0x20, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x45,
	0x53, 0x12, 0x4a, 0x0a, 0x10, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62,
	0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x1c, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x45, 0x0a,
	0x0e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x12,
	0x1c, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x15, 0x2e,
	0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x52, 0x45, 0x53, 0x12, 0x35, 0x0a, 0x09, 0x4f, 0x72, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x11, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x15, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e,
	0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x41, 0x0a, 0x0a, 0x4f,
	0x72, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x65, 0x74, 0x12, 0x18, 0x2e, 0x7a, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x65, 0x74, 0x5f,
	0x52, 0x45, 0x51, 0x1a, 0x19, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4f,
	0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x35,
	0x0a, 0x09, 0x4f, 0x72, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x7a, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x15,
	0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x55, 0x0a, 0x11, 0x53, 0x4d, 0x53, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x1f, 0x2e, 0x7a, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x4d, 0x53, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x1f, 0x2e, 0x7a, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x4d, 0x53, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x4f, 0x0a, 0x13,
	0x53, 0x4d, 0x53, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x12, 0x21, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x53,
	0x4d, 0x53, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x15, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x3d, 0x0a,
	0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x12, 0x17, 0x2e, 0x7a, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x5f,
	0x52, 0x45, 0x51, 0x1a, 0x17, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x43, 0x0a, 0x0d,
	0x48, 0x61, 0x73, 0x5a, 0x5a, 0x5a, 0x5a, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x2e,
	0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x73, 0x5a, 0x5a, 0x5a, 0x5a,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x15, 0x2e, 0x7a, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x52, 0x45,
	0x53, 0x12, 0x5b, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x21, 0x2e, 0x7a, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x5f,
	0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x29, 0x2e,
	0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x15, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x52, 0x45, 0x53, 0x12,
	0x70, 0x0a, 0x1a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x76, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x2e,
	0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x76, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x28, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x76, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x52, 0x45,
	0x53, 0x12, 0x6d, 0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x76, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x27,
	0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x76, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x27, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x45, 0x6e, 0x76, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x52, 0x45, 0x53,
	0x12, 0x5f, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x27, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x76, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x52, 0x45,
	0x53, 0x12, 0x3d, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x12, 0x15, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x52, 0x45, 0x51, 0x1a, 0x15, 0x2e, 0x7a, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x52, 0x45, 0x53,
	0x12, 0x3b, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x7a,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x52, 0x45, 0x51, 0x1a, 0x17, 0x2e, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x2e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x45, 0x53, 0x42, 0x0c, 0x5a,
	0x0a, 0x2e, 0x2f, 0x7a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_zauth_proto_rawDescOnce sync.Once
	file_zauth_proto_rawDescData = file_zauth_proto_rawDesc
)

func file_zauth_proto_rawDescGZIP() []byte {
	file_zauth_proto_rawDescOnce.Do(func() {
		file_zauth_proto_rawDescData = protoimpl.X.CompressGZIP(file_zauth_proto_rawDescData)
	})
	return file_zauth_proto_rawDescData
}

var file_zauth_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_zauth_proto_goTypes = []interface{}{
	(*Default_REQ)(nil),                     // 0: zauth_pb.Default_REQ
	(*Default_RES)(nil),                     // 1: zauth_pb.Default_RES
	(*LoginByPhone_REQ)(nil),                // 2: zauth_pb.LoginByPhone_REQ
	(*LoginByUser_REQ)(nil),                 // 3: zauth_pb.LoginByUser_REQ
	(*Login_RES)(nil),                       // 4: zauth_pb.Login_RES
	(*CheckAuth_REQ)(nil),                   // 5: zauth_pb.CheckAuth_REQ
	(*CheckAuth_RES)(nil),                   // 6: zauth_pb.CheckAuth_RES
	(*HasUID_REQ)(nil),                      // 7: zauth_pb.HasUID_REQ
	(*PermissionInfo)(nil),                  // 8: zauth_pb.PermissionInfo
	(*PermissionInfo_RES)(nil),              // 9: zauth_pb.PermissionInfo_RES
	(*PermissionInfoList_RES)(nil),          // 10: zauth_pb.PermissionInfoList_RES
	(*PermissionListGet_REQ)(nil),           // 11: zauth_pb.PermissionListGet_REQ
	(*PermissionBind_REQ)(nil),              // 12: zauth_pb.PermissionBind_REQ
	(*OrgInfo)(nil),                         // 13: zauth_pb.OrgInfo
	(*OrgInfo_RES)(nil),                     // 14: zauth_pb.OrgInfo_RES
	(*OrgInfoList_RES)(nil),                 // 15: zauth_pb.OrgInfoList_RES
	(*OrgListGet_REQ)(nil),                  // 16: zauth_pb.OrgListGet_REQ
	(*SMSVerifyCodeSend_REQ)(nil),           // 17: zauth_pb.SMSVerifyCodeSend_REQ
	(*SMSSendVerifyCode_RES)(nil),           // 18: zauth_pb.SMSSendVerifyCode_RES
	(*SMSVerifyCodeVerify_REQ)(nil),         // 19: zauth_pb.SMSVerifyCodeVerify_REQ
	(*HasZZZZString_REQ)(nil),               // 20: zauth_pb.HasZZZZString_REQ
	(*ConfigGetFileConfig_REQ)(nil),         // 21: zauth_pb.ConfigGetFileConfig_REQ
	(*ConfigGetFileConfig_RES)(nil),         // 22: zauth_pb.ConfigGetFileConfig_RES
	(*ConfigSyncServiceFileConfig_REQ)(nil), // 23: zauth_pb.ConfigSyncServiceFileConfig_REQ
	(*ConfigSyncServiceEnvConfig_REQ)(nil),  // 24: zauth_pb.ConfigSyncServiceEnvConfig_REQ
	(*ConfigSyncServiceEnvConfig_RES)(nil),  // 25: zauth_pb.ConfigSyncServiceEnvConfig_RES
	(*ConfigGetServiceEnvConfig_REQ)(nil),   // 26: zauth_pb.ConfigGetServiceEnvConfig_REQ
	(*ConfigGetServiceEnvConfig_RES)(nil),   // 27: zauth_pb.ConfigGetServiceEnvConfig_RES
	(*ConfigGetEnvConfig_REQ)(nil),          // 28: zauth_pb.ConfigGetEnvConfig_REQ
	(*AssetInfo)(nil),                       // 29: zauth_pb.AssetInfo
	(*AddAsset_REQ)(nil),                    // 30: zauth_pb.AddAsset_REQ
	(*AssetInfo_RES)(nil),                   // 31: zauth_pb.AssetInfo_RES
}
var file_zauth_proto_depIdxs = []int32{
	8,  // 0: zauth_pb.PermissionInfo_RES.info:type_name -> zauth_pb.PermissionInfo
	8,  // 1: zauth_pb.PermissionInfoList_RES.list:type_name -> zauth_pb.PermissionInfo
	13, // 2: zauth_pb.OrgInfo_RES.info:type_name -> zauth_pb.OrgInfo
	13, // 3: zauth_pb.OrgInfoList_RES.list:type_name -> zauth_pb.OrgInfo
	29, // 4: zauth_pb.AssetInfo_RES.info:type_name -> zauth_pb.AssetInfo
	0,  // 5: zauth_pb.zauth.Logout:input_type -> zauth_pb.Default_REQ
	2,  // 6: zauth_pb.zauth.LoginByPhone:input_type -> zauth_pb.LoginByPhone_REQ
	3,  // 7: zauth_pb.zauth.LoginByUser:input_type -> zauth_pb.LoginByUser_REQ
	0,  // 8: zauth_pb.zauth.LoginCheck:input_type -> zauth_pb.Default_REQ
	7,  // 9: zauth_pb.zauth.HasUID:input_type -> zauth_pb.HasUID_REQ
	8,  // 10: zauth_pb.zauth.PermissionCreate:input_type -> zauth_pb.PermissionInfo
	11, // 11: zauth_pb.zauth.PermissionListGet:input_type -> zauth_pb.PermissionListGet_REQ
	8,  // 12: zauth_pb.zauth.PermissionUpdate:input_type -> zauth_pb.PermissionInfo
	12, // 13: zauth_pb.zauth.PermissionBind:input_type -> zauth_pb.PermissionBind_REQ
	13, // 14: zauth_pb.zauth.OrgCreate:input_type -> zauth_pb.OrgInfo
	16, // 15: zauth_pb.zauth.OrgListGet:input_type -> zauth_pb.OrgListGet_REQ
	13, // 16: zauth_pb.zauth.OrgUpdate:input_type -> zauth_pb.OrgInfo
	17, // 17: zauth_pb.zauth.SMSVerifyCodeSend:input_type -> zauth_pb.SMSVerifyCodeSend_REQ
	19, // 18: zauth_pb.zauth.SMSVerifyCodeVerify:input_type -> zauth_pb.SMSVerifyCodeVerify_REQ
	5,  // 19: zauth_pb.zauth.CheckAuth:input_type -> zauth_pb.CheckAuth_REQ
	20, // 20: zauth_pb.zauth.HasZZZZString:input_type -> zauth_pb.HasZZZZString_REQ
	21, // 21: zauth_pb.zauth.ConfigGetFileConfig:input_type -> zauth_pb.ConfigGetFileConfig_REQ
	23, // 22: zauth_pb.zauth.ConfigSyncServiceFileConfig:input_type -> zauth_pb.ConfigSyncServiceFileConfig_REQ
	24, // 23: zauth_pb.zauth.ConfigSyncServiceEnvConfig:input_type -> zauth_pb.ConfigSyncServiceEnvConfig_REQ
	26, // 24: zauth_pb.zauth.ConfigGetServiceEnvConfig:input_type -> zauth_pb.ConfigGetServiceEnvConfig_REQ
	28, // 25: zauth_pb.zauth.ConfigGetEnvConfig:input_type -> zauth_pb.ConfigGetEnvConfig_REQ
	0,  // 26: zauth_pb.zauth.ServiceRegist:input_type -> zauth_pb.Default_REQ
	30, // 27: zauth_pb.zauth.AddAsset:input_type -> zauth_pb.AddAsset_REQ
	1,  // 28: zauth_pb.zauth.Logout:output_type -> zauth_pb.Default_RES
	4,  // 29: zauth_pb.zauth.LoginByPhone:output_type -> zauth_pb.Login_RES
	4,  // 30: zauth_pb.zauth.LoginByUser:output_type -> zauth_pb.Login_RES
	1,  // 31: zauth_pb.zauth.LoginCheck:output_type -> zauth_pb.Default_RES
	1,  // 32: zauth_pb.zauth.HasUID:output_type -> zauth_pb.Default_RES
	9,  // 33: zauth_pb.zauth.PermissionCreate:output_type -> zauth_pb.PermissionInfo_RES
	10, // 34: zauth_pb.zauth.PermissionListGet:output_type -> zauth_pb.PermissionInfoList_RES
	9,  // 35: zauth_pb.zauth.PermissionUpdate:output_type -> zauth_pb.PermissionInfo_RES
	1,  // 36: zauth_pb.zauth.PermissionBind:output_type -> zauth_pb.Default_RES
	14, // 37: zauth_pb.zauth.OrgCreate:output_type -> zauth_pb.OrgInfo_RES
	15, // 38: zauth_pb.zauth.OrgListGet:output_type -> zauth_pb.OrgInfoList_RES
	14, // 39: zauth_pb.zauth.OrgUpdate:output_type -> zauth_pb.OrgInfo_RES
	18, // 40: zauth_pb.zauth.SMSVerifyCodeSend:output_type -> zauth_pb.SMSSendVerifyCode_RES
	1,  // 41: zauth_pb.zauth.SMSVerifyCodeVerify:output_type -> zauth_pb.Default_RES
	6,  // 42: zauth_pb.zauth.CheckAuth:output_type -> zauth_pb.CheckAuth_RES
	1,  // 43: zauth_pb.zauth.HasZZZZString:output_type -> zauth_pb.Default_RES
	22, // 44: zauth_pb.zauth.ConfigGetFileConfig:output_type -> zauth_pb.ConfigGetFileConfig_RES
	1,  // 45: zauth_pb.zauth.ConfigSyncServiceFileConfig:output_type -> zauth_pb.Default_RES
	25, // 46: zauth_pb.zauth.ConfigSyncServiceEnvConfig:output_type -> zauth_pb.ConfigSyncServiceEnvConfig_RES
	27, // 47: zauth_pb.zauth.ConfigGetServiceEnvConfig:output_type -> zauth_pb.ConfigGetServiceEnvConfig_RES
	27, // 48: zauth_pb.zauth.ConfigGetEnvConfig:output_type -> zauth_pb.ConfigGetServiceEnvConfig_RES
	1,  // 49: zauth_pb.zauth.ServiceRegist:output_type -> zauth_pb.Default_RES
	31, // 50: zauth_pb.zauth.AddAsset:output_type -> zauth_pb.AssetInfo_RES
	28, // [28:51] is the sub-list for method output_type
	5,  // [5:28] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_zauth_proto_init() }
func file_zauth_proto_init() {
	if File_zauth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zauth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Default_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Default_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginByPhone_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginByUser_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Login_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAuth_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAuth_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasUID_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionInfo_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionInfoList_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionListGet_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionBind_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgInfo_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgInfoList_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgListGet_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMSVerifyCodeSend_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMSSendVerifyCode_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMSVerifyCodeVerify_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasZZZZString_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigGetFileConfig_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigGetFileConfig_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigSyncServiceFileConfig_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigSyncServiceEnvConfig_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigSyncServiceEnvConfig_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigGetServiceEnvConfig_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigGetServiceEnvConfig_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigGetEnvConfig_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAsset_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zauth_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetInfo_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zauth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_zauth_proto_goTypes,
		DependencyIndexes: file_zauth_proto_depIdxs,
		MessageInfos:      file_zauth_proto_msgTypes,
	}.Build()
	File_zauth_proto = out.File
	file_zauth_proto_rawDesc = nil
	file_zauth_proto_goTypes = nil
	file_zauth_proto_depIdxs = nil
}
